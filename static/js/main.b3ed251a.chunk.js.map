{"version":3,"sources":["components/shared/Button.js","components/ExpensesTable.js","redux/budget/budgetSelector.js","components/container/ContainerExpensesTable.js","redux/budget/budgetActions.js","redux/budget/budgetTypes.js","components/Stat.js","components/Values.js","components/container/ContainerValues.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/BudgetForm.js","components/container/ContainerBudgetForm.js","components/ExpenseForm.js","components/container/ContainerExpenseForm.js","components/App.js","redux/budget/budgetReducer.js","index.js"],"names":["StyledButton","styled","button","_templateObject","Button","_ref","_ref$type","type","_ref$label","label","_ref$onClick","onClick","react_default","a","createElement","Table","table","ExpensesTable_templateObject","ExpensesTable","_ref$items","items","onRemove","map","_ref2","id","name","value","key","shared_Button","defaultProps","getItems","state","expenseItems","getBudget","totalBudget","getItemsLength","length","getExpenses","createSelector","reduce","acc","item","getBalance","budget","expenses","mapDispatchToProps","payload","connect","Container","div","Stat_templateObject","props","isPositive","Label","p","_templateObject2","Value","_templateObject3","Stat","Stat_Label","section","Values_templateObject","Values","balance","Values_Container","components_Stat","StyledForm","form","Form_templateObject","Form","_ref$onSubmit","onSubmit","children","StyledLabel","Label_templateObject","customStyles","StyledInput","input","Input_templateObject","Input","_ref$value","_ref$onChange","onChange","_ref$name","BudgetForm","shared_Form","shared_Label","shared_Input","ContainerBudgetForm","handleChange","e","_this","setState","target","handleSubmit","preventDefault","onSave","this","components_BudgetForm","React","Component","ExpenseForm","amount","ContainerExpenseForm","Object","defineProperty","_this$state","_this$state2","components_ExpenseForm","App_templateObject","App_Container","container_ContainerBudgetForm","ContainerValues","container_ContainerExpenseForm","ContainerExpensesTable","combineReducers","arguments","undefined","action","concat","toConsumableArray","objectSpread","shortid","generate","filter","store","createStore","reducer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b3ed251a.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from './shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, value }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{value}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      value: PropTypes.number.isRequired,\n    }),\n  ),\n};\nExpensesTable.defaultProps = {\n  items: [],\n};\nexport default ExpensesTable;\n","import { createSelector } from 'reselect';\n\nexport const getItems = state => state.expenseItems;\nexport const getBudget = state => state.totalBudget;\nexport const getItemsLength = state => state.expenseItems.length;\n\nexport const getExpenses = createSelector(\n  [getItems],\n  items => items.reduce((acc, item) => item.value + acc, 0),\n);\nexport const getBalance = createSelector(\n  [getBudget, getExpenses],\n  (budget, expenses) => budget - expenses,\n);\n","import { connect } from 'react-redux';\nimport { deleteExpenseItem } from '../../redux/budget/budgetActions';\nimport ExpensesTable from '../ExpensesTable';\nimport { getItems } from '../../redux/budget/budgetSelector';\n\nconst mapStateToProps = state => {\n  return {\n    items: getItems(state),\n  };\n};\nconst mapDispatchToProps = {\n  onRemove: deleteExpenseItem,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import {\n  ADD_EXPENSE_ITEM,\n  DELETE_EXPENSE_ITEM,\n  SET_TOTAL_BUDGET,\n} from './budgetTypes';\n\nexport const setTotalBudget = value => ({\n  type: SET_TOTAL_BUDGET,\n  payload: value,\n});\nexport const addExpenseItem = (name, value) => ({\n  type: ADD_EXPENSE_ITEM,\n  payload: { name, value },\n});\nexport const deleteExpenseItem = id => ({\n  type: DELETE_EXPENSE_ITEM,\n  payload: id,\n});\n","export const SET_TOTAL_BUDGET = 'SET_TOTAL_BUDGET';\nexport const ADD_EXPENSE_ITEM = 'ADD_EXPENSE_ITEM';\nexport const DELETE_EXPENSE_ITEM = 'DELETE_EXPENSE_ITEM';\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\nStat.defaultProps = {\n  isPositive: false,\n};\nexport default Stat;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Stat from './Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\nexport default Values;\n","import { connect } from 'react-redux';\nimport Values from '../Values';\n\nimport {\n  getBalance,\n  getBudget,\n  getExpenses,\n} from '../../redux/budget/budgetSelector';\n\nconst mapStateToProps = state => {\n  return {\n    budget: getBudget(state),\n    expenses: getExpenses(state),\n    balance: getBalance(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  children: PropTypes.any,\n};\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\nLabel.propTypes = {\n  children: PropTypes.any,\n  customStyles: PropTypes.string,\n};\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n};\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nconst BudgetForm = ({ onSubmit, budget, onChange }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter your total budget\n        <Input type=\"number\" value={budget} onChange={onChange} />\n      </Label>\n\n      <Button label=\"Save\" type=\"submit\" />\n    </Form>\n  );\n};\n\nBudgetForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  budget: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default BudgetForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setTotalBudget } from '../../redux/budget/budgetActions';\nimport BudgetForm from '../BudgetForm';\n\nclass ContainerBudgetForm extends React.Component {\n  state = { budget: 0 };\n\n  handleChange = e => {\n    this.setState({\n      budget: +e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { onSave } = this.props;\n    const { budget } = this.state;\n    onSave(budget);\n\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <BudgetForm\n        budget={budget}\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\nContainerBudgetForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\nexport default connect(\n  null,\n  { onSave: setTotalBudget },\n)(ContainerBudgetForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nconst ExpenseForm = ({ onSubmit, onChange, name, amount }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label customStyles={labelStyles}>\n        Enter expense name\n        <Input type=\"text\" name=\"name\" value={name} onChange={onChange} />\n      </Label>\n      <Label customStyles={labelStyles}>\n        Enter expense amount\n        <Input type=\"number\" name=\"amount\" value={amount} onChange={onChange} />\n      </Label>\n\n      <Button label=\"Add\" type=\"submit\" />\n    </Form>\n  );\n};\nExpenseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n};\n\nexport default ExpenseForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addExpenseItem } from '../../redux/budget/budgetActions';\nimport ExpenseForm from '../ExpenseForm';\n\nclass ContainerExpenseForm extends React.Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { onSave } = this.props;\n    const { name, amount } = this.state;\n    onSave(name, +amount);\n\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <ExpenseForm\n        name={name}\n        amount={+amount}\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\nContainerExpenseForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  { onSave: addExpenseItem },\n)(ContainerExpenseForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ExpensesTable from './container/ContainerExpensesTable';\nimport Values from './container/ContainerValues';\nimport ContainerBudgetForm from './container/ContainerBudgetForm';\nimport ContainerExpenseForm from './container/ContainerExpenseForm';\nimport { getItemsLength } from '../redux/budget/budgetSelector';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 400px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  width: 1000px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = ({ length }) => {\n  return (\n    <Container>\n      <ContainerBudgetForm />\n      <Values />\n      <ContainerExpenseForm />\n      {length > 0 && <ExpensesTable />}\n    </Container>\n  );\n};\nApp.propTypes = {\n  length: PropTypes.number.isRequired,\n};\nconst mapStateToProps = state => ({ length: getItemsLength(state) });\nexport default connect(mapStateToProps)(App);\n","import shortid from 'shortid';\nimport { combineReducers } from 'redux';\nimport {\n  ADD_EXPENSE_ITEM,\n  DELETE_EXPENSE_ITEM,\n  SET_TOTAL_BUDGET,\n} from './budgetTypes';\n\nconst budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case SET_TOTAL_BUDGET:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst expenseItems = (state = [], action) => {\n  switch (action.type) {\n    case ADD_EXPENSE_ITEM:\n      return [...state, { ...action.payload, id: shortid.generate() }];\n    case DELETE_EXPENSE_ITEM:\n      return state.filter(item => item.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  totalBudget: budgetReducer,\n  expenseItems,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport reducer from './redux/budget/budgetReducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}